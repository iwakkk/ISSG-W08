const crypto = require('crypto');

const bobPrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCvo8J5L5bqLh00
JoP9XKbRUhqrAom3B/xmYUHk7WxqUAOOCqDYMLhCllKtE1IIHihOPb8V0jwAXYGQ
ygASPiXSOI73F2VPvqk1O3KzOoBQprgsk1/5rfs61c6F7XQ/PTdkL5R34P49iGUe
68jsBwfUtokknFlxG2sBzbfIVjtLSzDcKIUtNxfWNgBuuFkjcNd6X65U3yjkVM4H
kZTb4h3BeuJiqlnFAXd/yOxCRClkiTiu6a8cyk8oRHnTjUvocn6+lG9DvIWmi3pu
iAqpVJFhNwYl3kLyX7Gv+CJYgAIwzoHUCJa+ug88AqnD3H9idQxRB0aHde60sqee
Yx1mdeUZAgMBAAECggEAP5zX+nw59GbvPMwWUdUUtgs+jWFF73x89beT3g3/jiGc
p/1BdAtxMOyw1O6Cb148ytmiM40JHji/jGkczX6kxBan8OYQU2mCbz0wtakigBNh
8QMPZ6aTryNwwSDXUXAid66j3ycl7bNQrHpJMvL46xmRYikeW9DKWMThIzXYE9R1
32Ws9VhIDoeQ8f16pMUXJbww2e4EG8xgL5r+0dzNL5zcXtETOrjnm6U83KQuQGuK
pLEioWXHkP4WRckydyZkTQ8ZwH2WGXJwGNVUB0AMzc6DZLs9E3ILY5pKf4zR4y2b
5pxcsvKNIVCtVphraGfUrZTjwRTtK8f3TvOGotmBYQKBgQDhvMzzGLptrII6AbkR
z61PFTERBFC77I2MlyvFq5fgxWQ4ahZyBzYm0Q17xHEQxpY3aPNGCJyn+IGHd9hd
L/7glD9IGpl5tgFtEH2ReK7r2iS4dW4TsnUyCGKYVCmSD95yHaVDmc+4j/LcEHy5
PvzZl+E4bOiHWtZpovdRd0NalwKBgQDHL6B2nBEDIgb1AGJ0FWJsPJfk8wnUqOk1
OvRdan3YawaSjH5QBBHee1eE1XnvaSAC6P7fmoQC6wUMB1QI3D/lvhkG5T1gxAMA
6EsL6DZMa8U9hPd0uKJ3I1aSzELsM+zg/PbVAbhhVFYNTHaeAiErrQ1dKQpcCla6
2C/xT+sjzwKBgCIRn5D043YX+hONHQReJpbv6Nbbot+p5PcZ/aY4rpRi1ixZfoe5
JOgY1wMd876HajZ0pXqlZBdJvyrV4Ja33qzAUwir0wv2dyKhwYHKCARaiP454uIg
JeXmNBMvaJK9yGHKrZ2VQi9lsk6aQmim4/xnGrusXC/JeuC4ksD90fGDAoGBAIY7
vIHybyyTU+jsl2zvtGKI+zxZ5XghVPiAgIor6B9fERDWCZHXDEvJB5QHYaNMTzxm
1MzQDsMAq2gN0D4gYBdt4uPYvWJm9jc4VMrzdRRPVJ8+6p0IiMSNVhyb90XDQJHn
KFkoTZ+Z/Fv9+bpGaSBMAUOVEtwwQ36rjrOrTiXVAoGBALd82YyA7ZwDJW7eFPNE
LlFoMI5fct8oDh5729INyh8KV0DWBiaXao+EIY8EkLNZbXS02SSXACyxNVeAdrSa
Z6Dblo3H+eGwzJltolWlqMdqOfMhUqfSG+WzdoNQdU78L6/4n8eM5WUFWZNpIJlP
DK+ObT2JPZkBTiFw/FVTkW5o
-----END PRIVATE KEY-----`

const bobPrivateKey = crypto.createPrivateKey(bobPrivateKeyPem);

const alicePublicKeyPem = `-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAWxNFnruGTGRs9VVNOU
ied/B98K15CQ3g8VPLXQm9kl1Sbs82Vt08rXoJ87PzPEDfvvFIZvzq3TllG8ZUpI
fxQbSMo2Db0FtfRiT4BfVGrVShAbsqcoxt0AEuuwctl2L76rp8wxUD6ysAwpb/kk
PyRIirPIWXJQvczzJ+OtTYYor9OTfgGXmG+xi4/a+aj1rF0564xs8cFra91TfoJz
ANEVXzfRB+Wt2UC+GPhyzu/OryEs5lRgE0VPmgqe4v6JcpuBqOmvI0+6H1y8m3gh
GnAH+9ulPbxR1v9vzvhecFyzxEkSv6qx35jHAHw97I17QWRrFi6uw1FSSCtvn571
JQIDAQAB
-----END PUBLIC KEY-----`;

const alicePublicKey = crypto.createPublicKey(alicePublicKeyPem);

const signatureHex = "686c88f52d5da8b5be9b48fcbdffce749ec9a994bbe2fca024fc7d79cdf50154e0a07eb11d83140ac100b6c8e6e8cbae644c1a49aebfaeacd385d730331eee431038259bea441d5391352bffe3f8e4ec58b3b2c2cab36cff89ec199877b33735d5f41415000bbbdbedf09a0f326d399d6f7e8ba8b171173205e4652f57ca92174a48df58c9e246a5caa2c3a5e87c565a82273a044875d052c0757a49ef8336c8484c9d1cd566598b149f4f98c32c37379da43ca80fcc8eaef2213f6ec4b67513c0fd97149c07b4d15ed6faf365bd1e5bb44e46687e3f9fa511d1c441f52cc3cd035da06fa0137ce1fd8fe95a5d4dbc4a4ad382230bbfe144dc84125579fbdfa5";
const signature = Buffer.from(signatureHex, "hex");

const ciphertextHex = "857c81d9069ab8a1b71671febe51c353f88f61d2daab986ab96f2d59fe21bd1ad5c5c426b9fbaf44bc7c2b19765850e14b2aa5ee4eb8690bba61e39cb97c4a6b2a338b55b1d87ff7c3c6065ae728ee6881a56522696b7d3856a3337870ecf91f190c8b67d9da4c2d67d2d6a9be11e42481d1d622b58645ee18b1b2742f866d42b7974b043dcc022db870d04fb48103692e91a3e477a0e9c014082240c3dcfd4b1a576843c79335f3e309092bac47ca1b3c562708f5526ce79117f160dda7a0a9eb8f13781ebd7f01a1edd815c10c21d5681d1c789fc6ec7ad55de6a7bc3f3f2aa1e433441ef88c4d73b868c1e306b2a0a035fb0961a7eaddfa91088e3cdea67a";
const ciphertext = Buffer.from(ciphertextHex, "hex");

const recoveredPlaintext = crypto.privateDecrypt(bobPrivateKey, ciphertext);
const message = recoveredPlaintext.toString("utf8");
const data = Buffer.from(message)

const isValid = crypto.verify("sha256", data, alicePublicKey, signature);
console.log("RSA signature verified:", isValid);